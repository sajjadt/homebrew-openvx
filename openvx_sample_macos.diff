diff -Npur -x '.*' a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2016-06-17 10:02:34.000000000 -0700
+++ b/CMakeLists.txt	2016-08-07 20:29:45.000000000 -0700
@@ -50,6 +50,8 @@ if (WIN32)
     include( CMake_windows_tools )
 elseif (ANDROID)
     include( CMake_android_tools )
+elseif (APPLE)
+    include( CMake_apple_tools )
 else ()
     include( CMake_linux_tools )
 endif ()
@@ -76,13 +78,13 @@ option( EXPERIMENTAL_PLATFORM_SUPPORTS_1

 if (UNIX OR ANDROID)
     add_definitions( -D_XOPEN_SOURCE=700 -D_BSD_SOURCE=1 -D_GNU_SOURCE=1 )
-    if (NOT (CYGWIN OR ANDROID))
+    if (NOT (CYGWIN OR ANDROID OR APPLE))
         set( EXPERIMENTAL_USE_OPENMP ON )
-    endif (NOT (CYGWIN OR ANDROID))
+    endif (NOT (CYGWIN OR ANDROID OR APPLE))
     set( EXPERIMENTAL_USE_DOT ON )
 endif (UNIX OR ANDROID)

-add_definitions( -DOPENVX_BUILDING )
+add_definitions( -DOPENVX_BUILDING )
 if (OPENVX_USE_SMP)
     add_definitions( -DOPENVX_USE_SMP )
 endif (OPENVX_USE_SMP)
diff -Npur -x '.*' a/cmake_utils/CMakeFuncs.txt b/cmake_utils/CMakeFuncs.txt
--- a/cmake_utils/CMakeFuncs.txt	2016-06-17 10:02:15.000000000 -0700
+++ b/cmake_utils/CMakeFuncs.txt	2016-08-07 20:32:23.000000000 -0700
@@ -86,7 +86,7 @@ endmacro( FILTER_SOURCES )
 function ( FIND_SOURCES )
     file( GLOB HEADER_FILES_TMP RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.h *.hpp )
     file( GLOB SOURCE_FILES_TMP RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.c *.cpp *.cc )
-
+
 	if (${ARGC} EQUAL 0 )
         set( FILER_OUT_REGEXP "not used regexp" )
     else()
@@ -108,13 +108,17 @@ function ( FIND_NUM_PROCESSORS )
   if ( WIN32 )
     set(PROCESSOR_COUNT_T "$ENV{NUMBER_OF_PROCESSORS}")
   else ( WIN32 )
-	set(CPUINFO_FILE "/proc/cpuinfo")
-	if(EXISTS "${CPUINFO_FILE}")
-		file(STRINGS "${CPUINFO_FILE}" PROCS REGEX "^processor.: [0-9]+$")
-		list(LENGTH PROCS PROCESSOR_COUNT_T)
-	else(EXISTS "${CPUINFO_FILE}")
-		set(PROCESSOR_COUNT_T "1")
-	endif(EXISTS "${CPUINFO_FILE}")
+    if ( APPLE )
+      set(PROCESSOR_COUNT_T "4")
+    else ( APPLE )
+	    set(CPUINFO_FILE "/proc/cpuinfo")
+	    if(EXISTS "${CPUINFO_FILE}")
+		    file(STRINGS "${CPUINFO_FILE}" PROCS REGEX "^processor.: [0-9]+$")
+		    list(LENGTH PROCS PROCESSOR_COUNT_T)
+	    else(EXISTS "${CPUINFO_FILE}")
+		    set(PROCESSOR_COUNT_T "1")
+	    endif(EXISTS "${CPUINFO_FILE}")
+    endif ( APPLE )
   endif( WIN32 )
   set( PROCESSOR_COUNT ${PROCESSOR_COUNT_T} PARENT_SCOPE )
 endfunction ( FIND_NUM_PROCESSORS )
diff -Npur -x '.*' a/cmake_utils/CMake_apple_tools.cmake b/cmake_utils/CMake_apple_tools.cmake
--- a/cmake_utils/CMake_apple_tools.cmake	1969-12-31 16:00:00.000000000 -0800
+++ b/cmake_utils/CMake_apple_tools.cmake	2016-08-07 20:35:57.000000000 -0700
@@ -0,0 +1,85 @@
+#
+# Copyright (c) 2011-2014 The Khronos Group Inc.
+#
+# Permission is hereby granted, free of charge, to any person obtaining a
+# copy of this software and/or associated documentation files (the
+# "Materials"), to deal in the Materials without restriction, including
+# without limitation the rights to use, copy, modify, merge, publish,
+# distribute, sublicense, and/or sell copies of the Materials, and to
+# permit persons to whom the Materials are furnished to do so, subject to
+# the following conditions:
+#
+# The above copyright notice and this permission notice shall be included
+# in all copies or substantial portions of the Materials.
+#
+# THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
+# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+# MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
+#
+
+# Options common to all projects.
+message(STATUS "** ** ** Enable Languages ** ** **")
+
+enable_language( C )
+enable_language( CXX )
+
+if(BUILD_X64)
+  set(ARCH_BIT -m64 )
+else()
+  if (TARGET_CPU STREQUAL "Atom")
+    # architecture will be according to ATOM
+    set(ARCH_BIT -m32 )
+  else ()
+    # need to force a more modern architecture than the degault m32 (i386).
+    set(ARCH_BIT "-m32 -march=core2" )
+  endif (TARGET_CPU STREQUAL "Atom")
+endif()
+
+
+# Compiler switches that CANNOT be modified during makefile generation
+set (ADD_COMMON_C_FLAGS         "${ARCH_BIT} -fPIC" )
+
+set (ADD_C_FLAGS                "${ADD_COMMON_C_FLAGS} -std=gnu99" )
+set (ADD_C_FLAGS_DEBUG          "-O0 -ggdb3 -D _DEBUG" )
+set (ADD_C_FLAGS_RELEASE        "-O2 -ggdb2 -U _DEBUG")
+set (ADD_C_FLAGS_RELWITHDEBINFO "-O2 -ggdb3 -U _DEBUG")
+
+set (ADD_CXX_FLAGS              "${ADD_COMMON_C_FLAGS}" )
+
+
+set(CMAKE_BUILD_WITH_INSTALL_RPATH    TRUE )   # build rpath as if already installed
+set(CMAKE_INSTALL_RPATH               "$ORIGIN::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::" ) # the rpath to use - search through installation dir only
+set(CMAKE_INSTALL_RPATH_USE_LINK_PATH FALSE)   # do not use static link paths as rpath
+
+# C switches
+set( CMAKE_C_FLAGS                          "${CMAKE_C_FLAGS}                         ${ADD_C_FLAGS}")
+set( CMAKE_C_FLAGS_DEBUG                    "${CMAKE_C_FLAGS_DEBUG}                   ${ADD_C_FLAGS_DEBUG}")
+set( CMAKE_C_FLAGS_RELEASE                  "${CMAKE_C_FLAGS_RELEASE}                 ${ADD_C_FLAGS_RELEASE}")
+set( CMAKE_C_FLAGS_RELWITHDEBINFO           "${CMAKE_C_FLAGS_RELWITHDEBINFO}          ${ADD_C_FLAGS_RELWITHDEBINFO}")
+
+# C++ switches
+set( CMAKE_CXX_FLAGS                        "${CMAKE_CXX_FLAGS}                       ${ADD_CXX_FLAGS}")
+set( CMAKE_CXX_FLAGS_DEBUG                  "${CMAKE_CXX_FLAGS_DEBUG}                 ${ADD_C_FLAGS_DEBUG}")
+set( CMAKE_CXX_FLAGS_RELEASE                "${CMAKE_CXX_FLAGS_RELEASE}               ${ADD_C_FLAGS_RELEASE}")
+set( CMAKE_CXX_FLAGS_RELWITHDEBINFO         "${CMAKE_CXX_FLAGS_RELWITHDEBINFO}        ${ADD_C_FLAGS_RELWITHDEBINFO}")
+
+# Linker switches - EXE
+set( CMAKE_EXE_LINKER_FLAGS                 "${INIT_LINKER_FLAGS}")
+
+# Linker switches - DLL
+set( CMAKE_SHARED_LINKER_FLAGS              "${INIT_LINKER_FLAGS}                     ${ADD_CMAKE_EXE_LINKER_FLAGS}")
+
+message(STATUS "\n\n** ** ** COMPILER Definitions ** ** **")
+message(STATUS "CMAKE_C_COMPILER        = ${CMAKE_C_COMPILER}")
+message(STATUS "CMAKE_C_FLAGS           = ${CMAKE_C_FLAGS}")
+message(STATUS "")
+message(STATUS "CMAKE_CXX_COMPILER      = ${CMAKE_CXX_COMPILER}")
+message(STATUS "CMAKE_CXX_FLAGS         = ${CMAKE_CXX_FLAGS}")
+message(STATUS "")
+message(STATUS "CMAKE_EXE_LINKER_FLAGS  = ${CMAKE_EXE_LINKER_FLAGS}")
+message(STATUS "")
+message(STATUS "CMAKE_BUILD_TOOL        = ${CMAKE_BUILD_TOOL}")
diff -Npur -x '.*' a/debug/CMakeLists.txt b/debug/CMakeLists.txt
--- a/debug/CMakeLists.txt	2016-06-17 10:02:32.000000000 -0700
+++ b/debug/CMakeLists.txt	2016-08-07 20:38:29.000000000 -0700
@@ -31,7 +31,7 @@
 set( TARGET_NAME vx_debug )

 include_directories( BEFORE
-                     ${CMAKE_CURRENT_SOURCE_DIR}
+                     ${CMAKE_CURRENT_SOURCE_DIR}
 					 ${CMAKE_SOURCE_DIR}/include )

 FIND_SOURCES()
@@ -39,9 +39,9 @@ FIND_SOURCES()
 # add a target named ${TARGET_NAME}
 add_library (${TARGET_NAME} ${SOURCE_FILES})

-install ( TARGETS ${TARGET_NAME}
+install ( TARGETS ${TARGET_NAME}
           RUNTIME DESTINATION bin
-          ARCHIVE DESTINATION bin
-          LIBRARY DESTINATION bin )
-
+          ARCHIVE DESTINATION lib
+          LIBRARY DESTINATION lib )
+
 set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${DEBUG_FOLDER} )
diff -Npur -x '.*' a/helper/CMakeLists.txt b/helper/CMakeLists.txt
--- a/helper/CMakeLists.txt	2016-06-17 10:02:30.000000000 -0700
+++ b/helper/CMakeLists.txt	2016-08-07 20:38:41.000000000 -0700
@@ -31,7 +31,7 @@
 set( TARGET_NAME openvx-helper )

 include_directories( BEFORE
-                     ${CMAKE_CURRENT_SOURCE_DIR}
+                     ${CMAKE_CURRENT_SOURCE_DIR}
 					 ${CMAKE_SOURCE_DIR}/include )

 FIND_SOURCES()
@@ -39,9 +39,9 @@ FIND_SOURCES()
 # add a target named ${TARGET_NAME}
 add_library (${TARGET_NAME} ${SOURCE_FILES})

-install ( TARGETS ${TARGET_NAME}
+install ( TARGETS ${TARGET_NAME}
           RUNTIME DESTINATION bin
-          ARCHIVE DESTINATION bin
-          LIBRARY DESTINATION bin )
-
+          ARCHIVE DESTINATION lib
+          LIBRARY DESTINATION lib )
+
 set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${HELPER_FOLDER} )
diff -Npur -x '.*' a/kernels/c_model/CMakeLists.txt b/kernels/c_model/CMakeLists.txt
--- a/kernels/c_model/CMakeLists.txt	2016-06-17 10:02:15.000000000 -0700
+++ b/kernels/c_model/CMakeLists.txt	2016-08-07 20:39:29.000000000 -0700
@@ -34,7 +34,7 @@ include_directories( BEFORE
                      ${CMAKE_CURRENT_SOURCE_DIR}
                      ${CMAKE_SOURCE_DIR}/include
                      ${CMAKE_SOURCE_DIR}/debug )
-
+
 FIND_SOURCES()

 # add a target named ${TARGET_NAME}
@@ -42,9 +42,9 @@ add_library (${TARGET_NAME} ${SOURCE_FIL

 target_link_libraries( ${TARGET_NAME} openvx )

-install ( TARGETS ${TARGET_NAME}
+install ( TARGETS ${TARGET_NAME}
           RUNTIME DESTINATION bin
-          ARCHIVE DESTINATION bin
-          LIBRARY DESTINATION bin )
-
+          ARCHIVE DESTINATION lib
+          LIBRARY DESTINATION lib )
+
 set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${KERNELS_FOLDER} )
diff -Npur -x '.*' a/kernels/debug/CMakeLists.txt b/kernels/debug/CMakeLists.txt
--- a/kernels/debug/CMakeLists.txt	2016-06-17 10:02:15.000000000 -0700
+++ b/kernels/debug/CMakeLists.txt	2016-08-07 20:39:02.000000000 -0700
@@ -39,9 +39,9 @@ FIND_SOURCES()
 # add a target named ${TARGET_NAME}
 add_library (${TARGET_NAME} ${SOURCE_FILES})

-install ( TARGETS ${TARGET_NAME}
+install ( TARGETS ${TARGET_NAME}
           RUNTIME DESTINATION bin
-          ARCHIVE DESTINATION bin
-          LIBRARY DESTINATION bin )
-
+          ARCHIVE DESTINATION lib
+          LIBRARY DESTINATION lib )
+
 set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${KERNELS_FOLDER} )
diff -Npur -x '.*' a/kernels/extras/CMakeLists.txt b/kernels/extras/CMakeLists.txt
--- a/kernels/extras/CMakeLists.txt	2016-06-17 10:02:15.000000000 -0700
+++ b/kernels/extras/CMakeLists.txt	2016-08-07 20:39:44.000000000 -0700
@@ -39,9 +39,9 @@ FIND_SOURCES()
 # add a target named ${TARGET_NAME}
 add_library (${TARGET_NAME} ${SOURCE_FILES})

-install ( TARGETS ${TARGET_NAME}
+install ( TARGETS ${TARGET_NAME}
           RUNTIME DESTINATION bin
-          ARCHIVE DESTINATION bin
-          LIBRARY DESTINATION bin )
-
+          ARCHIVE DESTINATION lib
+          LIBRARY DESTINATION lib )
+
 set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${KERNELS_FOLDER} )
diff -Npur -x '.*' a/libraries/debug/CMakeLists.txt b/libraries/debug/CMakeLists.txt
--- a/libraries/debug/CMakeLists.txt	2016-06-17 10:02:15.000000000 -0700
+++ b/libraries/debug/CMakeLists.txt	2016-08-07 20:40:18.000000000 -0700
@@ -35,7 +35,7 @@ include_directories( BEFORE
                      ${CMAKE_CURRENT_SOURCE_DIR}
                      ${CMAKE_SOURCE_DIR}/include
                      ${CMAKE_SOURCE_DIR}/kernels/debug )
-
+
 if ((WIN32) OR (CYGWIN))
    add_definitions( ${OPENVX_BUILDING_EXPORT_DEF} )
 endif ((WIN32) OR (CYGWIN))
@@ -59,8 +59,8 @@ target_link_libraries( ${TARGET_NAME_2}

 install ( TARGETS ${TARGET_NAME_1} ${TARGET_NAME_2}
           RUNTIME DESTINATION bin
-          ARCHIVE DESTINATION bin
-          LIBRARY DESTINATION bin )
-
+          ARCHIVE DESTINATION lib
+          LIBRARY DESTINATION lib )
+
 set_target_properties( ${TARGET_NAME_1} PROPERTIES FOLDER ${LIBRARIES_DEBUG_FOLDER} )
 set_target_properties( ${TARGET_NAME_2} PROPERTIES FOLDER ${LIBRARIES_DEBUG_FOLDER} )
diff -Npur -x '.*' a/libraries/extras/CMakeLists.txt b/libraries/extras/CMakeLists.txt
--- a/libraries/extras/CMakeLists.txt	2016-06-17 10:02:15.000000000 -0700
+++ b/libraries/extras/CMakeLists.txt	2016-08-07 20:40:36.000000000 -0700
@@ -39,7 +39,7 @@ include_directories( BEFORE
 if ((WIN32) OR (CYGWIN))
    add_definitions( ${OPENVX_BUILDING_EXPORT_DEF} )
 endif ((WIN32) OR (CYGWIN))
-
+
 # add a target named ${TARGET_NAME}
 add_library (${TARGET_NAME_1} vx_extras_lib.c)

@@ -61,8 +61,8 @@ target_link_libraries( ${TARGET_NAME_2}

 install ( TARGETS ${TARGET_NAME_1} ${TARGET_NAME_2}
           RUNTIME DESTINATION bin
-          ARCHIVE DESTINATION bin
-          LIBRARY DESTINATION bin )
-
+          ARCHIVE DESTINATION lib
+          LIBRARY DESTINATION lib )
+
 set_target_properties( ${TARGET_NAME_1} PROPERTIES FOLDER ${LIBRARIES_EXTRAS_FOLDER} )
 set_target_properties( ${TARGET_NAME_2} PROPERTIES FOLDER ${LIBRARIES_EXTRAS_FOLDER} )
diff -Npur -x '.*' a/sample/framework/CMakeLists.txt b/sample/framework/CMakeLists.txt
--- a/sample/framework/CMakeLists.txt	2016-06-17 10:02:32.000000000 -0700
+++ b/sample/framework/CMakeLists.txt	2016-08-07 20:44:34.000000000 -0700
@@ -33,14 +33,14 @@ set( TARGET_NAME openvx )
 include_directories( BEFORE
                      ${CMAKE_CURRENT_SOURCE_DIR}
                      ${CMAKE_CURRENT_SOURCE_DIR}/../include
-					 ${CMAKE_SOURCE_DIR}/include
-					 ${CMAKE_SOURCE_DIR}/debug
+					 ${CMAKE_SOURCE_DIR}/include
+					 ${CMAKE_SOURCE_DIR}/debug
 					 ${OPENCL_INCLUDE_PATH} )
-
+
 if ((WIN32) OR (CYGWIN))
    add_definitions( ${OPENVX_BUILDING_EXPORT_DEF} )
 endif ((WIN32) OR (CYGWIN))
-
+
 FIND_SOURCES()

 if ((WIN32) OR (CYGWIN))
@@ -57,7 +57,11 @@ if (NOT WIN32)
 	if (ANDROID)
 	    list( APPEND LINK_ADDITIONAL log )
 	else (ANDROID)
-	    list( APPEND LINK_ADDITIONAL pthread rt )
+      if (APPLE)
+        list( APPEND LINK_ADDITIONAL pthread )
+      else (APPLE)
+        list( APPEND LINK_ADDITIONAL pthread rt )
+      endif (APPLE)
 	endif (ANDROID)
 endif (NOT WIN32)

@@ -68,7 +72,11 @@ if (EXPERIMENTAL_USE_OPENCL)
 		    message(FATAL_ERROR "Could not find OpenCL library")
 		endif (NOT LIB_OPENCL)
 		list( APPEND LINK_ADDITIONAL ${LIB_OPENCL} )
-	endif (OPENCL_LIB_PATH)
+  else (OPENCL_LIB_PATH)
+    if (APPLE)
+      list( APPEND LINK_ADDITIONAL "-framework OpenCL" )
+    endif (APPLE)
+  endif (OPENCL_LIB_PATH)
 endif (EXPERIMENTAL_USE_OPENCL)

 if (CYGWIN)
@@ -77,9 +85,9 @@ endif (CYGWIN)

 target_link_libraries( ${TARGET_NAME} openvx-helper vx_debug ${LINK_ADDITIONAL} )

-install ( TARGETS ${TARGET_NAME}
+install ( TARGETS ${TARGET_NAME}
           RUNTIME DESTINATION bin
           ARCHIVE DESTINATION lib
-          LIBRARY DESTINATION bin )
-
+          LIBRARY DESTINATION lib )
+
 set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${SAMPLE_FOLDER} )
diff -Npur -x '.*' a/sample/targets/c_model/CMakeLists.txt b/sample/targets/c_model/CMakeLists.txt
--- a/sample/targets/c_model/CMakeLists.txt	2016-06-17 10:02:31.000000000 -0700
+++ b/sample/targets/c_model/CMakeLists.txt	2016-08-07 20:45:12.000000000 -0700
@@ -34,7 +34,7 @@ include_directories( BEFORE
                      ${CMAKE_CURRENT_SOURCE_DIR}
 					 ${CMAKE_CURRENT_SOURCE_DIR}/../../include
 					 ${CMAKE_SOURCE_DIR}/include
-                     ${CMAKE_SOURCE_DIR}/kernels/c_model
+                     ${CMAKE_SOURCE_DIR}/kernels/c_model
 					 ${CMAKE_SOURCE_DIR}/debug
                      ${OPENCL_INCLUDE_PATH} )

@@ -53,9 +53,9 @@ endif (CYGWIN)

 target_link_libraries( ${TARGET_NAME} openvx-debug-lib openvx-extras-lib openvx-helper openvx-c_model-lib openvx vxu )

-install ( TARGETS ${TARGET_NAME}
+install ( TARGETS ${TARGET_NAME}
           RUNTIME DESTINATION bin
           ARCHIVE DESTINATION lib
-          LIBRARY DESTINATION bin )
-
-set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${SAMPLE_TARGETS_FOLDER} )
\ No newline at end of file
+          LIBRARY DESTINATION lib )
+
+set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${SAMPLE_TARGETS_FOLDER} )
diff -Npur -x '.*' a/sample/targets/opencl/vx_interface.h b/sample/targets/opencl/vx_interface.h
--- a/sample/targets/opencl/vx_interface.h	2016-06-17 10:02:31.000000000 -0700
+++ b/sample/targets/opencl/vx_interface.h	2016-08-07 20:46:45.000000000 -0700
@@ -1,4 +1,4 @@
-/*
+/*
  * Copyright (c) 2012-2016 The Khronos Group Inc.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a
@@ -37,7 +37,7 @@

 #include <vx_internal.h>

-#if defined(DARWIN)
+#if defined(DARWIN) || defined(__APPLE__)
 #include <OpenCL/opencl.h>
 #else
 #include <CL/cl.h>
@@ -112,5 +112,3 @@ extern vx_cl_kernel_description_t not_ke
 extern vx_cl_kernel_description_t histogram_kernel;

 #endif
-
-
diff -Npur -x '.*' a/sample/vxu/CMakeLists.txt b/sample/vxu/CMakeLists.txt
--- a/sample/vxu/CMakeLists.txt	2016-06-17 10:02:32.000000000 -0700
+++ b/sample/vxu/CMakeLists.txt	2016-08-07 20:47:49.000000000 -0700
@@ -35,11 +35,11 @@ include_directories( BEFORE
                      ${CMAKE_CURRENT_SOURCE_DIR}/../include
                      ${CMAKE_SOURCE_DIR}/debug
                      ${CMAKE_SOURCE_DIR}/include )
-
+
 if ((WIN32) OR (CYGWIN))
    add_definitions( ${OPENVX_BUILDING_EXPORT_DEF} )
 endif ((WIN32) OR (CYGWIN))
-
+
 FIND_SOURCES()

 if ((WIN32) OR (CYGWIN))
@@ -55,9 +55,9 @@ endif (CYGWIN)

 target_link_libraries( ${TARGET_NAME} openvx openvx-helper )

-install ( TARGETS ${TARGET_NAME}
+install ( TARGETS ${TARGET_NAME}
           RUNTIME DESTINATION bin
           ARCHIVE DESTINATION lib
-          LIBRARY DESTINATION bin )
-
-set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${SAMPLE_FOLDER} )
\ No newline at end of file
+          LIBRARY DESTINATION lib )
+
+set_target_properties( ${TARGET_NAME} PROPERTIES FOLDER ${SAMPLE_FOLDER} )
